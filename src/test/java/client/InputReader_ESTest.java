/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 01 11:54:36 GMT 2018
 */

package client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.InputReader;
import client.MessageSender;
import java.io.ByteArrayInputStream;
import java.io.DataOutputStream;
import java.io.InputStream;
import java.net.Proxy;
import java.net.Socket;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InputReader_ESTest extends InputReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
      Socket socket0 = mock(Socket.class, new ViolatedAssumptionAnswer());
      InputReader inputReader0 = new InputReader(inputStream0, (MessageSender) null, socket0);
      // Undeclared exception!
      try { 
        inputReader0.startReader();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.InputReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 1596);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("^yC)CRl88.SuJG", false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      MessageSender messageSender0 = new MessageSender(dataOutputStream0);
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      InputReader inputReader0 = new InputReader(byteArrayInputStream0, messageSender0, mockSocket0);
      InputReader.InputReaderWorker inputReader_InputReaderWorker0 = inputReader0.new InputReaderWorker();
      // Undeclared exception!
      try { 
        inputReader_InputReaderWorker0.run();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockFile mockFile0 = new MockFile("hI|.fCz\u0007c6z!S");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      MessageSender messageSender0 = new MessageSender(dataOutputStream0);
      MockSocket mockSocket0 = new MockSocket();
      InputReader inputReader0 = new InputReader((InputStream) null, messageSender0, mockSocket0);
      inputReader0.startReader();
  }
}
