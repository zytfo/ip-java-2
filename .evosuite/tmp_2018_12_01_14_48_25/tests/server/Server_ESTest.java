/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 01 11:52:05 GMT 2018
 */

package server;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockServerSocket;
import org.junit.runner.RunWith;
import server.ConnectionHandler;
import server.MessageHandler;
import server.MessageQueue;
import server.Server;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Server_ESTest extends Server_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MessageQueue messageQueue0 = new MessageQueue();
      MockServerSocket mockServerSocket0 = new MockServerSocket(3655);
      ConnectionHandler connectionHandler0 = new ConnectionHandler(mockServerSocket0);
      Server server0 = new Server(messageQueue0, connectionHandler0, (MessageHandler) null);
      // Undeclared exception!
      try { 
        server0.init();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("server.Server", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MessageQueue messageQueue0 = new MessageQueue();
      MockServerSocket mockServerSocket0 = new MockServerSocket(11);
      ConnectionHandler connectionHandler0 = new ConnectionHandler(mockServerSocket0);
      MessageHandler messageHandler0 = new MessageHandler();
      Server server0 = new Server(messageQueue0, connectionHandler0, messageHandler0);
      server0.addChat();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MessageQueue messageQueue0 = new MessageQueue();
      MockServerSocket mockServerSocket0 = new MockServerSocket();
      ConnectionHandler connectionHandler0 = new ConnectionHandler(mockServerSocket0);
      MessageHandler messageHandler0 = new MessageHandler();
      Server server0 = new Server(messageQueue0, connectionHandler0, messageHandler0);
      server0.init();
  }
}
